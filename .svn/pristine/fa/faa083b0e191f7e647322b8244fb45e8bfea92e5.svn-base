questionModule.controller('questionController', questionController);
questionController.$inject = ['$timeout', '$location', 'questionFactory', 'commonFactory'];
function questionController($timeout, $location, questionFactory, commonFactory) {
    var vm = this;
    vm.isUpdate = false;
    vm.questions = {};
    vm.question_length = '';
    vm.errorMessage = {};
    vm.myvalue = '';
    
    //all faq list
    vm.getAllQuestions = function () {
        if ( $location.search().hasOwnProperty( 'survey' ) ) {            
            vm.myvalue = $location.search().survey;
            questionFactory.getQuestions(vm.myvalue)
                .then(function (data) {                
                    vm.question_length = data.data.questions.length;
                    if (data.data.questions && data.data.questions.length > 0) {
                        vm.questions = data.data.questions;
                        console.log(vm.questions)
                    }else{
                        vm.questions = {};    
                    }
                });
        } else {   
            questionFactory.getAllQuestions()
                .then(function (data) {                                
                    vm.question_length = data.data.questions.length;
                    if (data.data.questions && data.data.questions.length > 0) {
                        vm.questions = data.data.questions;
                        console.log(vm.questions)
                    }else{
                        vm.questions = {};    
                    }
                });         
        }
    };
    vm.getAllQuestions();
    //vm.getAllQuestions();
    // console.log(vm.surveyId)
    // vm.checkSurvey = function(){
    //     if(vm.surveyId == '' || vm.surveyId == null){
    //         vm.getAllQuestions();
    //     } else {
    //         vm.getSurveyQuestions();
    //     }
    // };
    // vm.checkSurvey();
    vm.getSurveyQuestions = function(){
        questionFactory.getQuestions(vm.surveyId).then(function (data) {   
            vm.question_length = data.data.questions.length;
            if (data.data.questions && data.data.questions.length > 0) {
                vm.questions = data.data.questions;
            }else{
                vm.questions = {};    
            }
        });

    };

    vm.currentQuestionId = 0;
    vm.currentQuestionStat = null;
    vm.statusMessage = {
        success: false,
        error: false,
        content: "",
        onModal: false
    };
    vm.clearStatusMessage = function () {
        vm.statusMessage = {
            success: false,
            error: false,
            content: "",
            onModal: false
        };
    };
    // vm.toggleQuestionStat = function (event, index) {
    //     vm.currentQuestionId = event.currentTarget.attributes['data-surveyid'].value;
    //     vm.currentQuestionStat = event.currentTarget.getAttribute('data-status');
    //     vm.doToggleQuestionStatus(index);
    // };
    // vm.doToggleSurveyStatus = function (index) {
    //     if (vm.currentSurveyId != 0 && vm.currentSurveyStat != null) {
    //         surveyFactory.changeClientStatus(vm.currentSurveyId, vm.currentSurveyStat)
    //             .then(function(response){
    //                 if (response.data.success) {
    //                     vm.statusMessage.success = true;
    //                     for (var i = 0; i < vm.surveys.length; i++) {
    //                         if (i == index) {
    //                             vm.surveys[i].is_active = ((vm.currentSurveyStat == true) ? false : true);
    //                             continue;
    //                         }
    //                     }
    //                     $timeout(function () {
    //                         vm.clearStatusMessage();
    //                     }, 5000);
    //                 } else {
    //                     vm.statusMessage.error = true;
    //                 }
    //                 vm.statusMessage.content = response.data.message;
    //             });
    //     }
    // };

    //set active value
    vm.typeOptions = [
        { value: 'simple', label: 'Simple Input' },
        { value: 'comment', label: 'Comments only' },
        { value: 'option', label: 'Options' },
        { value: 'number', label: 'Number Range' }
    ];
    vm.optionLength = 1;
    vm.optionArr;
    vm.resetQuestionData = function () {
        vm.questionData = {
            survey: [],
            question: "",
            type: "simple",            
            options: [{"id":'option1'}],
            max: "",
            min: "",
            comment: false
        };
    };
    vm.resetQuestionData();
    

    vm.addOption = function(){
        vm.optionLength = vm.optionLength+1;
        vm.questionData.options.push({"id": 'option'+parseInt(vm.optionLength)});        
    }

    vm.removeOption = function(index){
        vm.optionLength = vm.optionLength-1;
        vm.questionData.options.splice(index, 1);        
    }

    //open add modal
    vm.addNewQuestionModal = function () {       
        vm.isUpdate = false;
        vm.resetQuestionData();
        $('#saveQuestion').modal('show');
    };

    //open update modal
    vm.showUpdateModal = function (survey_id) {
        questionFactory.getQuestionDetailsById(survey_id).then(function (data) {            
            if (data.data.success == true) {
                vm.questionData = {
                    survey: data.data.question.survey,
                    question: data.data.question.question,
                    type: data.data.question.type,
                    options: data.data.question.options,                    
                    max: data.data.question.max,
                    min: data.data.question.min,
                    comment: data.data.question.comment,
                    createdAt: data.data.question.createdAt
                };
                vm.currentQuestionId = data.data.question._id;
                vm.isUpdate = true;
                $('#saveQuestion').modal('show');
            }
        });
        
    };
    
    vm.getAllSurvey = function () {
        questionFactory.getAllSurvey().then(function (data) {
            var surveyArr = [];
            for(c=0; c<data.data.surveys.length; c++){
                surveyArr.push({ value: data.data.surveys[c]._id, 
                    label: data.data.surveys[c].survey_name+" ("+data.data.surveys[c].clientid_fk.client_code+") " });
            }            
            vm.surveys = surveyArr;           
        });
    };
    vm.getAllSurvey();
    //open view modal
    vm.showDetailsModal = function (question_id) {
        questionFactory.getQuestionDetailsById(question_id).then(function (data) {                      
            if (data.data.success == true){
                vm.questionData = {                    
                    question: data.data.question.question,
                    type: data.data.question.type,
                    options: data.data.question.options,                    
                    max: data.data.question.max,
                    min: data.data.question.min,
                    comment: data.data.question.comment,
                    createdAt: data.data.question.createdAt
                };
                vm.currentQuestionId = data.data.question._id;
                vm.isUpdate = true;
                $('#vewQuestion').modal('show');
            } else {
                vm.errorMessage = data.data.message;
            }
        });
        
    };

    // add/update faqw
    vm.saveQuestion = function () {        
        vm.clearStatusMessage();
        if (vm.isUpdate && vm.currentQuestionId != 0) {
            if (vm.questionData.question == '' || vm.questionData.question == undefined) {
                vm.errorMessage = {};
                vm.errorMessage.question = 'Please add question.';
            } else if (vm.questionData.type == '' || vm.questionData.type == undefined) {
                vm.errorMessage = {};
                vm.errorMessage.type = 'Please select type.';
            } else {
                vm.errorMessage = {};
                console.log('updated id'+vm.currentQuestionId);
                console.log(vm.questionData);
                questionFactory.updateQuestion(vm.currentQuestionId, vm.questionData)
                .then(function (data) {
                    if (data.data.success) {
                        vm.statusMessage.success = true;
                        $timeout(function () {
                            vm.clearStatusMessage();
                        }, 5000);
                        $('#saveQuestion').modal('hide');
                        vm.getAllQuestions();
                    } else {
                        vm.statusMessage.error = true;
                        vm.statusMessage.onModal = true;
                    }
                    vm.statusMessage.content = data.data.message;
                });
            }
        } else {
            //console.log(vm.questionData); return false;
            if (vm.questionData.question == '' || vm.questionData.question == undefined) {
                vm.errorMessage = {};
                vm.errorMessage.question = 'Please add question.';
            } else if (vm.questionData.type == '' || vm.questionData.type == undefined) {
                vm.errorMessage = {};
                vm.errorMessage.type = 'Please select type.';
            } else {
                vm.errorMessage = {};
                questionFactory.saveQuestion(vm.questionData)
                .then(function (data) {
                    if (data.data.success) {
                        vm.statusMessage.success = true;
                        vm.resetQuestionData();
                        $timeout(function () {
                            vm.clearStatusMessage();
                        }, 5000);
                        $('#saveQuestion').modal('hide');
                        vm.getAllQuestions();
                    } else {
                        vm.statusMessage.error = true;
                        vm.statusMessage.onModal = true;
                    }

                    vm.statusMessage.content = data.data.message;
                });
            }

        }
    };
    vm.setCurrentQuestionId = function (questionid) {
        vm.currentQuestionId = questionid;        
    };

    //delete faq
    vm.deleteQuestion = function () {           
        questionFactory.deleteQuestion(vm.currentQuestionId)
        .then(function (data) {                          
            if (data.data.success==true) {
                vm.statusMessage.success = true;
                $timeout(function () {
                    vm.clearStatusMessage();
                }, 5000);
                $('#confirmDelete').modal('hide');
                vm.getAllQuestions();
                
            } else {
                vm.statusMessage.error = true;
                vm.statusMessage.onModal = true;
            }
            vm.statusMessage.content = data.data.message;
        });
    };
}
